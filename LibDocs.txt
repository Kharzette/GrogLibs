Audio Entity
	The activated flag makes the sound immediately play when
	the level is running.  Unless the player is nearby, this
	probably only makes sense for a looping sound.
	
	If the audio is triggered, if also activated a triggering
	will turn the sound off.  If not activated a triggering
	will turn it on.

Moving Models
	To build moving pieces of geometry such as doors or moving
	platforms, create a func_door or func_plat entity in quark,
	then give it a name such as Door00 in the TargetName field.
	
	Make a trigger to activate it such as a trigger_once for a
	one time opening or rising, or trigger_stand_in for a door
	or plat that changes while a player is inside the triggered
	area.  Set the target of the trigger to the previous name
	given to the door or plat.
	
	To provide movement to a door for instance, create a
	target_move_stage entity, and give it a targetname such as
	DoorMover00, and set the door's target to this same value
	(DoorMover00).
	
	Move Axis determines the direction of movement.  See map
	coordinate system notes below.
	
	Move amount is the amount to move along move axis for this
	entire stage.
	
	Rotate to target is a true or false value determining if
	the movement rotates towards the angle specified in
	rotation target over the stage interval.  This can go
	beyond the normal 360 value to spin around multiple
	times if desired.  Note that a player riding on does not
	feel the angular momentum of a spin yet.
	
	Rotation rate is an amount to continuously rotate after any
	movement is completed.  This stalls the stage into a locked
	rotating state when it happens.  Amount is degrees per
	second in pitch, yaw, roll.
	
	Stage Interval is the amount of time it takes for the stage
	to complete from start to finish in milliseconds.
	
	Ease In and out are for a smooth acceleration and slowdown.
	
Map Coordinate System notes
	For axis angle values:
	0 0 0 is facing down positive X in quark and in game.
	pitch yaw roll is the x x x ordering.
	To get a direction, look at the angles generated by aiming
	a sunlight entity.
	
Character Notes
	Bone bounding boxes are axial from the reference pose.  If
	the pose is relaxed and not the usual T, this can cause
	the limb bounds to stick out quite a bit.

Fill Lights
	Characters and statics are lit via the strongest light in
	line of sight.  There are two fill lights that aren't
	affected by this.  These can be specified regionally via
	the misc_trilight_info entity.  The character or static
	will pick up the nearest ones and blend between them via
	the lighthelper class.